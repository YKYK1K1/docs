(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{845:function(n,e,a){"use strict";a.r(e);var r=a(67),t=Object(r.a)({},(function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"在-gitlab-上创建项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-gitlab-上创建项目"}},[n._v("#")]),n._v(" "),a("strong",[n._v("在 GitLab 上创建项目")])]),n._v(" "),a("h2",{attrs:{id:"创建群组项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建群组项目"}},[n._v("#")]),n._v(" "),a("strong",[n._v("创建群组项目")])]),n._v(" "),a("p",[a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-1584266705.png",alt:""}}),n._v(" "),a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-19276482384.png",alt:""}}),n._v(" "),a("strong",[n._v("创建群组成功")]),n._v(" "),a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-1231236612.png",alt:""}})]),n._v(" "),a("h2",{attrs:{id:"创建统一的依赖管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建统一的依赖管理"}},[n._v("#")]),n._v(" "),a("strong",[n._v("创建统一的依赖管理")])]),n._v(" "),a("p",[a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-1827461273.png",alt:""}}),n._v(" "),a("strong",[n._v("添加默认的自述文件")]),n._v(" "),a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-1927461233.png",alt:""}}),n._v(" "),a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-1917256312.png",alt:""}})]),n._v(" "),a("h3",{attrs:{id:"pom-xml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml"}},[n._v("#")]),n._v(" pom.xml")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.0.3.RELEASE</version>\n    </parent>\n\n    <groupId>com.yky</groupId>\n    <artifactId>itoken-dependencies</artifactId>\n    <version>1.0.0-SNAPSHOT</version>\n    <packaging>pom</packaging>\n\n    <name>itoken-dependencies</name>\n    <url>http://www.yky.com</url>\n    <inceptionYear>2018-Now</inceptionYear>\n\n    <properties>\n        \x3c!-- Environment Settings --\x3e\n        <java.version>1.8</java.version>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\n        \x3c!-- Spring Settings --\x3e\n        <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>\n        <spring-boot-admin.version>2.0.1</spring-boot-admin.version>\n        <zipkin.version>2.10.1</zipkin.version>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            \x3c!-- Spring Cloud Begin --\x3e\n            <dependency>\n                <groupId>org.springframework.cloud</groupId>\n                <artifactId>spring-cloud-dependencies</artifactId>\n                <version>${spring-cloud.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            \x3c!-- Spring Cloud End --\x3e\n\n            \x3c!-- Spring Boot Admin Begin --\x3e\n            <dependency>\n                <groupId>de.codecentric</groupId>\n                <artifactId>spring-boot-admin-starter-server</artifactId>\n                <version>${spring-boot-admin.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>de.codecentric</groupId>\n                <artifactId>spring-boot-admin-starter-client</artifactId>\n                <version>${spring-boot-admin.version}</version>\n            </dependency>\n            \x3c!-- Spring Boot Admin End --\x3e\n\n            \x3c!-- ZipKin Begin --\x3e\n            <dependency>\n                <groupId>io.zipkin.java</groupId>\n                <artifactId>zipkin</artifactId>\n                <version>${zipkin.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.zipkin.java</groupId>\n                <artifactId>zipkin-server</artifactId>\n                <version>${zipkin.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.zipkin.java</groupId>\n                <artifactId>zipkin-autoconfigure-ui</artifactId>\n                <version>${zipkin.version}</version>\n            </dependency>\n            \x3c!-- ZipKin End --\x3e\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <plugins>\n            \x3c!-- Compiler 插件, 设定 JDK 版本 --\x3e\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <showWarnings>true</showWarnings>\n                </configuration>\n            </plugin>\n\n            \x3c!-- 打包 jar 文件时，配置 manifest 文件，加入 lib 包的 jar 依赖 --\x3e\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <configuration>\n                    <archive>\n                        <addMavenDescriptor>false</addMavenDescriptor>\n                    </archive>\n                </configuration>\n                <executions>\n                    <execution>\n                        <configuration>\n                            <archive>\n                                <manifest>\n                                    \x3c!-- Add directory entries --\x3e\n                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n                                    <addClasspath>true</addClasspath>\n                                </manifest>\n                            </archive>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n\n            \x3c!-- resource --\x3e\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-resources-plugin</artifactId>\n            </plugin>\n\n            \x3c!-- install --\x3e\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-install-plugin</artifactId>\n            </plugin>\n\n            \x3c!-- clean --\x3e\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-clean-plugin</artifactId>\n            </plugin>\n\n            \x3c!-- ant --\x3e\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-antrun-plugin</artifactId>\n            </plugin>\n\n            \x3c!-- dependency --\x3e\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-dependency-plugin</artifactId>\n            </plugin>\n        </plugins>\n\n        <pluginManagement>\n            <plugins>\n                \x3c!-- Java Document Generate --\x3e\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <executions>\n                        <execution>\n                            <phase>prepare-package</phase>\n                            <goals>\n                                <goal>jar</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n\n                \x3c!-- YUI Compressor (CSS/JS压缩) --\x3e\n                <plugin>\n                    <groupId>net.alchim31.maven</groupId>\n                    <artifactId>yuicompressor-maven-plugin</artifactId>\n                    <version>1.5.1</version>\n                    <executions>\n                        <execution>\n                            <phase>prepare-package</phase>\n                            <goals>\n                                <goal>compress</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                    <configuration>\n                        <encoding>UTF-8</encoding>\n                        <jswarn>false</jswarn>\n                        <nosuffix>true</nosuffix>\n                        <linebreakpos>30000</linebreakpos>\n                        <force>true</force>\n                        <includes>\n                            <include>**/*.js</include>\n                            <include>**/*.css</include>\n                        </includes>\n                        <excludes>\n                            <exclude>**/*.min.js</exclude>\n                            <exclude>**/*.min.css</exclude>\n                        </excludes>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        \x3c!-- 资源文件配置 --\x3e\n        <resources>\n            <resource>\n                <directory>src/main/java</directory>\n                <excludes>\n                    <exclude>**/*.java</exclude>\n                </excludes>\n            </resource>\n            <resource>\n                <directory>src/main/resources</directory>\n            </resource>\n        </resources>\n    </build>\n\n    <distributionManagement>\n        <repository>\n            <id>nexus-releases</id>\n            <name>Nexus Release Repository</name>\n            <url>http://192.168.0.164:8081/repository/maven-releases/</url>\n        </repository>\n        <snapshotRepository>\n            <id>nexus-snapshots</id>\n            <name>Nexus Snapshot Repository</name>\n            <url>http://192.168.0.164:8081/repository/maven-snapshots/</url>\n        </snapshotRepository>\n    </distributionManagement>\n\n    <repositories>\n        <repository>\n            <id>nexus</id>\n            <name>Nexus Repository</name>\n            <url>http://192.168.0.164:8081/repository/maven-public/</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n        </repository>\n\n        <repository>\n            <id>aliyun-repos</id>\n            <name>Aliyun Repository</name>\n            <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </repository>\n\n        <repository>\n            <id>sonatype-repos</id>\n            <name>Sonatype Repository</name>\n            <url>https://oss.sonatype.org/content/groups/public</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </repository>\n        <repository>\n            <id>sonatype-repos-s</id>\n            <name>Sonatype Repository</name>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n            <releases>\n                <enabled>false</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n\n        <repository>\n            <id>spring-snapshots</id>\n            <name>Spring Snapshots</name>\n            <url>https://repo.spring.io/snapshot</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n        <repository>\n            <id>spring-milestones</id>\n            <name>Spring Milestones</name>\n            <url>https://repo.spring.io/milestone</url>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </repository>\n    </repositories>\n\n    <pluginRepositories>\n        <pluginRepository>\n            <id>nexus</id>\n            <name>Nexus Plugin Repository</name>\n            <url>http://192.168.0.164:8081/repository/maven-public/</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n        </pluginRepository>\n\n        <pluginRepository>\n            <id>aliyun-repos</id>\n            <name>Aliyun Repository</name>\n            <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </pluginRepository>\n    </pluginRepositories>\n</project>\n')])])]),a("p",[a("strong",[n._v("再次进入群组 选择 itoken")]),n._v(" "),a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-192736123.png",alt:""}})]),n._v(" "),a("h2",{attrs:{id:"创建-分布式控制中心-完善信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-分布式控制中心-完善信息"}},[n._v("#")]),n._v(" "),a("strong",[n._v("创建 分布式控制中心 完善信息")])]),n._v(" "),a("p",[a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-102837612.png",alt:""}})]),n._v(" "),a("h3",{attrs:{id:"pom-xml-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml-2"}},[n._v("#")]),n._v(" "),a("strong",[n._v("pom.xml")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>com.yky</groupId>\n        <artifactId>itoken-dependencies</artifactId>\n        <version>1.0.0-SNAPSHOT</version>\n        <relativePath>../itoken-dependencies/pom.xml</relativePath>\n    </parent>\n\n    <artifactId>itoken-config</artifactId>\n    <packaging>jar</packaging>\n\n    <name>itoken-config</name>\n    <url>http://www.yky.com</url>\n    <inceptionYear>2018-Now</inceptionYear>\n\n    <dependencies>\n        \x3c!-- Spring Boot Begin --\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        \x3c!-- Spring Boot End --\x3e\n\n        \x3c!-- Spring Cloud Begin --\x3e\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-zipkin</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-config-server</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>\n        </dependency>\n        \x3c!-- Spring Cloud End --\x3e\n\n        \x3c!-- Spring Boot Admin Begin --\x3e\n        <dependency>\n            <groupId>org.jolokia</groupId>\n            <artifactId>jolokia-core</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>de.codecentric</groupId>\n            <artifactId>spring-boot-admin-starter-client</artifactId>\n        </dependency>\n        \x3c!-- Spring Boot Admin End --\x3e\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <mainClass>com.yky.itoken.config.ConfigApplication</mainClass>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n')])])]),a("h3",{attrs:{id:"application-yml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-yml"}},[n._v("#")]),n._v(" "),a("strong",[n._v("application.yml")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("spring:\n  application:\n    name: itoken-config\n  boot:\n    admin:\n      client:\n        url: http://localhost:8084\n  cloud:\n    config:\n      label: master\n      server:\n        git:\n          uri: http://192.168.0.163/itoken/itoken-config.git\n          search-paths: respo\n          username: yky19970707@163.com\n          password: 12345678\n  zipkin:\n    base-url: http://localhost:9411\n\nserver:\n  port: 8888\n\neureka:\n  client:\n    serviceUrl:\n      defaultZone: http://localhost:8761/eureka/\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: health,info\n")])])]),a("h3",{attrs:{id:"application"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application"}},[n._v("#")]),n._v(" "),a("strong",[n._v("Application")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("package com.yky.itoken.config;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.config.server.EnableConfigServer;\nimport org.springframework.cloud.netflix.eureka.EnableEurekaClient;\n\n/**\n * @version 1.0\n * @ClassName ConfigApplication\n * @Description TODO\n * @Author YKY\n * @Date 2020/3/15 18:49\n **/\n@SpringBootApplication\n@EnableConfigServer\n@EnableEurekaClient\npublic class ConfigApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(ConfigApplication.class, args);\n    }\n}\n")])])]),a("h2",{attrs:{id:"创建-服务注册与发现-项目-完善信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-服务注册与发现-项目-完善信息"}},[n._v("#")]),n._v(" "),a("strong",[n._v("创建 服务注册与发现 项目 完善信息")])]),n._v(" "),a("p",[a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-1982736123.png",alt:""}})]),n._v(" "),a("h3",{attrs:{id:"pom-xml-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml-3"}},[n._v("#")]),n._v(" pom.xml")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>com.yky</groupId>\n        <artifactId>itoken-dependencies</artifactId>\n        <version>1.0.0-SNAPSHOT</version>\n        <relativePath>../itoken-dependencies/pom.xml</relativePath>\n    </parent>\n\n    <artifactId>itoken-eureka</artifactId>\n    <packaging>jar</packaging>\n\n    <name>itoken-eureka</name>\n    <url>http://www.yky.com</url>\n    <inceptionYear>2018-Now</inceptionYear>\n\n    <dependencies>\n        \x3c!-- Spring Boot Begin --\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        \x3c!-- Spring Boot End --\x3e\n\n        \x3c!-- Spring Cloud Begin --\x3e\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-zipkin</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-config</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>\n        </dependency>\n        \x3c!-- Spring Cloud End --\x3e\n\n        \x3c!-- Spring Boot Admin Begin --\x3e\n        <dependency>\n            <groupId>org.jolokia</groupId>\n            <artifactId>jolokia-core</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>de.codecentric</groupId>\n            <artifactId>spring-boot-admin-starter-client</artifactId>\n        </dependency>\n        \x3c!-- Spring Boot Admin End --\x3e\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <mainClass>com.yky.itoken.eureka.EurekaApplication</mainClass>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n')])])]),a("h3",{attrs:{id:"application-yml-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-yml-2"}},[n._v("#")]),n._v(" "),a("strong",[n._v("application.yml")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("spring:\n  cloud:\n    config:\n      uri: http://localhost:8888\n      name: itoken-eureka\n      label: master\n      profile: dev\n")])])]),a("h3",{attrs:{id:"application-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-2"}},[n._v("#")]),n._v(" "),a("strong",[n._v("Application")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("package com.yky.itoken.eureka;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;\n\n/**\n * @version 1.0\n * @ClassName EurekaApplication\n * @Description TODO\n * @Author YKY\n * @Date 2020/3/15 19:18\n **/\n@SpringBootApplication\n@EnableEurekaServer\npublic class EurekaApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(EurekaApplication.class, args);\n    }\n}\n")])])]),a("h3",{attrs:{id:"cloud-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-config"}},[n._v("#")]),n._v(" "),a("strong",[n._v("Cloud Config")])]),n._v(" "),a("blockquote",[a("p",[n._v("在 "),a("code",[n._v("itoken-config")]),n._v(" 项目的 "),a("code",[n._v("respo")]),n._v(" 目录下创建一个名为 "),a("code",[n._v("itoken-eureka-dev.yml")]),n._v(" 的配置文件，内容如下:")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("spring:\n  application:\n    name: itoken-eureka\n  boot:\n    admin:\n      client:\n        url: http://localhost:8084\n  zipkin:\n    base-url: http://localhost:9411\n\nserver:\n  port: 8761\n\neureka:\n  instance:\n    hostname: localhost\n  client:\n    registerWithEureka: false\n    fetchRegistry: false\n    serviceUrl:\n      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: health,info\n")])])]),a("h3",{attrs:{id:"集群部署的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群部署的配置"}},[n._v("#")]),n._v(" "),a("strong",[n._v("集群部署的配置")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("spring:\n  application:\n    name: itoken-eureka\n  boot:\n    admin:\n      client:\n        url: http://localhost:8084\n  zipkin:\n    base-url: http://localhost:9411\n\nserver:\n  port: 8761\n\neureka:\n  instance:\n    hostname: host\n  client:\n    # 表示是否将自己注册到 Eureka，因为要构建集群环境，需要将自己注册到集群，所以应该开启\n    registerWithEureka: true\n    # 表示是否从 Eureka 获取注册信息，如果是单一节点，不需要同步其他 Eureka节点，则可以设置为false，但此处为集群，应该设置 true\n    fetchRegistry: true\n    serviceUrl:\n      # Eureka 集群地址\n      defaultZone: http://ip:${server.port}/eureka/,http://ip:${server.port}/eureka/,http://ip:${server.port}/eureka/\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: health,info\n")])])]),a("h2",{attrs:{id:"创建-分布式链路追踪-项目-完善信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-分布式链路追踪-项目-完善信息"}},[n._v("#")]),n._v(" "),a("strong",[n._v("创建 分布式链路追踪 项目 完善信息")])]),n._v(" "),a("p",[a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-123881272.png",alt:""}})]),n._v(" "),a("h3",{attrs:{id:"pom-xml-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml-4"}},[n._v("#")]),n._v(" pom.xml")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>com.yky</groupId>\n        <artifactId>itoken-dependencies</artifactId>\n        <version>1.0.0-SNAPSHOT</version>\n        <relativePath>../itoken-dependencies/pom.xml</relativePath>\n    </parent>\n\n    <artifactId>itoken-zipkin</artifactId>\n    <packaging>jar</packaging>\n\n    <name>itoken-zipkin</name>\n    <url>http://www.yky.com</url>\n    <inceptionYear>2018-Now</inceptionYear>\n\n    <dependencies>\n        \x3c!-- Spring Boot Begin --\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        \x3c!-- Spring Boot End --\x3e\n\n        \x3c!-- Spring Cloud Begin --\x3e\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-zipkin</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-config</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>\n        </dependency>\n        \x3c!-- Spring Cloud End --\x3e\n\n        \x3c!-- Spring Boot Admin Begin --\x3e\n        <dependency>\n            <groupId>org.jolokia</groupId>\n            <artifactId>jolokia-core</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>de.codecentric</groupId>\n            <artifactId>spring-boot-admin-starter-client</artifactId>\n        </dependency>\n        \x3c!-- Spring Boot Admin End --\x3e\n\n        \x3c!-- ZipKin Begin --\x3e\n        <dependency>\n            <groupId>io.zipkin.java</groupId>\n            <artifactId>zipkin</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.zipkin.java</groupId>\n            <artifactId>zipkin-server</artifactId>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-log4j2</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>io.zipkin.java</groupId>\n            <artifactId>zipkin-autoconfigure-ui</artifactId>\n        </dependency>\n        \x3c!-- ZipKin End --\x3e\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <mainClass>com.yky.itoken.zipkin.ZipKinApplication</mainClass>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n')])])]),a("h3",{attrs:{id:"application-yml-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-yml-3"}},[n._v("#")]),n._v(" "),a("strong",[n._v("application.yml")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("spring:\n  cloud:\n    config:\n      uri: http://localhost:8888\n      name: itoken-zipkin\n      label: master\n      profile: dev\n")])])]),a("h3",{attrs:{id:"application-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-3"}},[n._v("#")]),n._v(" "),a("strong",[n._v("Application")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("package com.yky.itoken.zipkin;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.netflix.eureka.EnableEurekaClient;\nimport zipkin.server.internal.EnableZipkinServer;\n\n/**\n * @version 1.0\n * @ClassName ZipkinApplication\n * @Description TODO\n * @Author YKY\n * @Date 2020/3/16 10:37\n **/\n@SpringBootApplication\n@EnableZipkinServer\n@EnableEurekaClient\npublic class ZipKinApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(ZipKinApplication.class, args);\n    }\n}\n")])])]),a("h3",{attrs:{id:"cloud-config-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-config-2"}},[n._v("#")]),n._v(" "),a("strong",[n._v("Cloud Config")])]),n._v(" "),a("blockquote",[a("p",[n._v("在 "),a("code",[n._v("itoken-config")]),n._v(" 项目的 "),a("code",[n._v("respo")]),n._v(" 目录下创建一个名为 "),a("code",[n._v("itoken-zipkin-dev.yml")]),n._v(" 的配置文件，内容如下：")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("spring:\n  application:\n    name: itoken-zipkin\n  boot:\n    admin:\n      client:\n        url: http://localhost:8084\n  zipkin:\n    base-url: http://localhost:9411\n\nserver:\n  port: 9411\n\neureka:\n  client:\n    serviceUrl:\n      defaultZone: http://localhost:8761/eureka/\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: health,info\n  metrics:\n    web:\n      server:\n        auto-time-requests: false\n")])])]),a("h2",{attrs:{id:"创建-分布式服务监控-项目-完善信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-分布式服务监控-项目-完善信息"}},[n._v("#")]),n._v(" "),a("strong",[n._v("创建 分布式服务监控 项目 完善信息")])]),n._v(" "),a("p",[a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-181726312.png",alt:""}})]),n._v(" "),a("h3",{attrs:{id:"pom-xml-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml-5"}},[n._v("#")]),n._v(" pom.xml")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>com.yky</groupId>\n        <artifactId>itoken-dependencies</artifactId>\n        <version>1.0.0-SNAPSHOT</version>\n        <relativePath>../itoken-dependencies/pom.xml</relativePath>\n    </parent>\n\n    <artifactId>itoken-admin</artifactId>\n    <packaging>jar</packaging>\n\n    <name>itoken-admin</name>\n    <url>http://www.yky.com</url>\n    <inceptionYear>2018-Now</inceptionYear>\n\n    <dependencies>\n        \x3c!-- Spring Boot Begin --\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-webflux</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        \x3c!-- Spring Boot End --\x3e\n\n        \x3c!-- Spring Cloud Begin --\x3e\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-zipkin</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-config</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>\n        </dependency>\n        \x3c!-- Spring Cloud End --\x3e\n\n        \x3c!-- Spring Boot Admin Begin --\x3e\n        <dependency>\n            <groupId>org.jolokia</groupId>\n            <artifactId>jolokia-core</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>de.codecentric</groupId>\n            <artifactId>spring-boot-admin-starter-server</artifactId>\n        </dependency>\n        \x3c!-- Spring Boot Admin End --\x3e\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <mainClass>com.yky.itoken.admin.AdminApplication</mainClass>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n')])])]),a("h3",{attrs:{id:"application-yml-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-yml-4"}},[n._v("#")]),n._v(" "),a("strong",[n._v("application.yml")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("spring:\n  cloud:\n    config:\n      uri: http://localhost:8888\n      name: itoken-admin\n      label: master\n      profile: dev\n")])])]),a("h3",{attrs:{id:"application-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-4"}},[n._v("#")]),n._v(" "),a("strong",[n._v("Application")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("package com.yky.itoken.admin;\n\nimport de.codecentric.boot.admin.server.config.EnableAdminServer;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.netflix.eureka.EnableEurekaClient;\n\n/**\n * @version 1.0\n * @ClassName AdminApplication\n * @Description TODO\n * @Author YKY\n * @Date 2020/3/16 10:49\n **/\n@SpringBootApplication\n@EnableEurekaClient\n@EnableAdminServer\npublic class AdminApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(AdminApplication.class, args);\n    }\n}\n")])])]),a("h3",{attrs:{id:"cloud-config-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-config-3"}},[n._v("#")]),n._v(" "),a("strong",[n._v("Cloud Config")])]),n._v(" "),a("p",[n._v("在 "),a("code",[n._v("itoken-config")]),n._v(" 项目的 "),a("code",[n._v("respo")]),n._v(" 目录下创建一个名为 "),a("code",[n._v("itoken-admin-dev.yml")]),n._v(" 的配置文件，内容如下：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("spring:\n  application:\n    name: itoken-admin\n  zipkin:\n    base-url: http://localhost:9411\n\nserver:\n  port: 8084\n\neureka:\n  client:\n    serviceUrl:\n      defaultZone: http://localhost:8761/eureka/\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: health,info\n")])])]),a("h2",{attrs:{id:"创建-路由网关-项目-完善信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-路由网关-项目-完善信息"}},[n._v("#")]),n._v(" "),a("strong",[n._v("创建 路由网关 项目 完善信息")])]),n._v(" "),a("p",[a("img",{attrs:{src:"/docs/assets/spring-cloud-itoken-prepare/yky-192731233.png",alt:""}})]),n._v(" "),a("h3",{attrs:{id:"pom-xml-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml-6"}},[n._v("#")]),n._v(" pom.xml")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>com.yky</groupId>\n        <artifactId>itoken-dependencies</artifactId>\n        <version>1.0.0-SNAPSHOT</version>\n        <relativePath>../itoken-dependencies/pom.xml</relativePath>\n    </parent>\n\n    <artifactId>itoken-zuul</artifactId>\n    <packaging>jar</packaging>\n\n    <name>itoken-zuul</name>\n    <url>http://www.yky.com</url>\n    <inceptionYear>2018-Now</inceptionYear>\n\n    <dependencies>\n        \x3c!-- Spring Boot Begin --\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        \x3c!-- Spring Boot End --\x3e\n\n        \x3c!-- Spring Cloud Begin --\x3e\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-zipkin</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-config</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>\n        </dependency>\n        \x3c!-- Spring Cloud End --\x3e\n\n        \x3c!-- Spring Boot Admin Begin --\x3e\n        <dependency>\n            <groupId>org.jolokia</groupId>\n            <artifactId>jolokia-core</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>de.codecentric</groupId>\n            <artifactId>spring-boot-admin-starter-client</artifactId>\n        </dependency>\n        \x3c!-- Spring Boot Admin End --\x3e\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <mainClass>com.yky.itoken.zuul.ZuulApplication</mainClass>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n')])])]),a("h3",{attrs:{id:"application-yml-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-yml-5"}},[n._v("#")]),n._v(" "),a("strong",[n._v("application.yml")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("spring:\n  cloud:\n    config:\n      uri: http://localhost:8888\n      name: itoken-zuul\n      label: master\n      profile: dev\n")])])]),a("h3",{attrs:{id:"application-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-5"}},[n._v("#")]),n._v(" "),a("strong",[n._v("Application")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("package com.yky.itoken.zuul;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.netflix.eureka.EnableEurekaClient;\nimport org.springframework.cloud.netflix.zuul.EnableZuulServer;\n\n/**\n * @version 1.0\n * @ClassName ZuulApplication\n * @Description TODO\n * @Author YKY\n * @Date 2020/3/16 10:56\n **/\n@SpringBootApplication\n@EnableEurekaClient\n@EnableZuulServer\npublic class ZuulApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(ZuulApplication.class, args);\n    }\n}\n")])])]),a("h3",{attrs:{id:"cloud-config-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-config-4"}},[n._v("#")]),n._v(" "),a("strong",[n._v("Cloud Config")])]),n._v(" "),a("blockquote",[a("p",[n._v("在 "),a("code",[n._v("itoken-config")]),n._v(" 项目的 "),a("code",[n._v("respo")]),n._v(" 目录下创建一个名为 "),a("code",[n._v("itoken-zuul-dev.yml")]),n._v(" 的配置文件，内容如下：")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("spring:\n  application:\n    name: itoken-zuul\n  boot:\n    admin:\n      client:\n        url: http://localhost:8084\n  zipkin:\n    base-url: http://localhost:9411\n\nserver:\n  port: 8769\n\neureka:\n  client:\n    serviceUrl:\n      defaultZone: http://localhost:8761/eureka/\n\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n  endpoints:\n    web:\n      exposure:\n        include: health,info\n")])])]),a("h2",{attrs:{id:"开启项目顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启项目顺序"}},[n._v("#")]),n._v(" "),a("strong",[n._v("开启项目顺序")])]),n._v(" "),a("p",[n._v("开启顺序 "),a("code",[n._v("Config")]),n._v(" --\x3e "),a("code",[n._v("Eureka")]),n._v(" --\x3e "),a("code",[n._v("ZipKin")]),n._v(" --\x3e "),a("code",[n._v("Admin")]),n._v(" --\x3e "),a("code",[n._v("zuul")])])])}),[],!1,null,null,null);e.default=t.exports}}]);