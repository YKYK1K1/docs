(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{860:function(n,e,t){"use strict";t.r(e);var a=t(67),o=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"applicationcontextaware"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#applicationcontextaware"}},[n._v("#")]),n._v(" "),t("strong",[n._v("ApplicationContextAware")])]),n._v(" "),t("p",[n._v("当一个类实现了这个接口（"),t("code",[n._v("ApplicationContextAware")]),n._v("）之后，这个类就可以方便获得 "),t("code",[n._v("ApplicationContext")]),n._v(" 中的所有 bean。换句话说，就是这个类可以直接获取 Spring 配置文件中，所有有引用到的 Bean 对象。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('package com.funtl.leeshop.commons.context;\n\nimport org.apache.commons.lang3.Validate;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.BeansException;\nimport org.springframework.beans.factory.DisposableBean;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.ApplicationContextAware;\n\npublic class SpringContext implements ApplicationContextAware, DisposableBean {\n\n    private static final Logger logger = LoggerFactory.getLogger(SpringContext.class);\n\n    private static ApplicationContext applicationContext;\n\n    /**\n     * 获取存储在静态变量中的 ApplicationContext\n     * @return\n     */\n    public static ApplicationContext getApplicationContext() {\n        assertContextInjected();\n        return applicationContext;\n    }\n\n    /**\n     * 从静态变量 applicationContext 中获取 Bean，自动转型成所赋值对象的类型\n     * @param name\n     * @param <T>\n     * @return\n     */\n    public static <T> T getBean(String name) {\n        assertContextInjected();\n        return (T) applicationContext.getBean(name);\n    }\n\n    /**\n     * 从静态变量 applicationContext 中获取 Bean，自动转型成所赋值对象的类型\n     * @param clazz\n     * @param <T>\n     * @return\n     */\n    public static <T> T getBean(Class<T> clazz) {\n        assertContextInjected();\n        return applicationContext.getBean(clazz);\n    }\n\n    /**\n     * 实现 DisposableBean 接口，在 Context 关闭时清理静态变量\n     * @throws Exception\n     */\n    public void destroy() throws Exception {\n        logger.debug("清除 SpringContext 中的 ApplicationContext: {}", applicationContext);\n        applicationContext = null;\n    }\n\n    /**\n     * 实现 ApplicationContextAware 接口，注入 Context 到静态变量中\n     * @param applicationContext\n     * @throws BeansException\n     */\n    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n        SpringContext.applicationContext = applicationContext;\n    }\n\n    /**\n     * 断言 Context 已经注入\n     */\n    private static void assertContextInjected() {\n        Validate.validState(applicationContext != null, "applicationContext 属性未注入，请在 spring-context.xml 配置中定义 SpringContext");\n    }\n}\n')])])]),t("p",[n._v("还需要在"),t("code",[n._v("spring-context.xml")]),n._v("配置文件中装配"),t("code",[n._v('<bean id="springContext" class="com.yky.leeshop.commons.context.SpringContext" />;')])]),n._v(" "),t("h2",{attrs:{id:"pom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pom"}},[n._v("#")]),n._v(" "),t("em",[n._v("POM")])]),n._v(" "),t("p",[n._v("需要在"),t("code",[n._v("pom.xml")]),n._v("中增加"),t("code",[n._v("org.apache.commons:commons-lang3")]),n._v("依赖")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("<dependency>\n    <groupId>org.apache.commons</groupId>\n    <artifactId>commons-lang3</artifactId>\n    <version>3.5</version>\n</dependency>\n")])])]),t("h2",{attrs:{id:"附：完整的-pom-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#附：完整的-pom-文件"}},[n._v("#")]),n._v(" "),t("strong",[n._v("附：完整的 POM 文件")])]),n._v(" "),t("p",[n._v("截止目前所学知识点，完整的 "),t("code",[n._v("pom.xml")]),n._v(" 如下：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.yky</groupId>\n    <artifactId>leeshop</artifactId>\n    <version>1.0.0-SNAPSHOT</version>\n    <packaging>war</packaging>\n\n    <dependencies>\n        \x3c!-- Spring Begin --\x3e\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-context</artifactId>\n            <version>4.3.17.RELEASE</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-webmvc</artifactId>\n            <version>4.3.17.RELEASE</version>\n        </dependency>\n        \x3c!-- Spring End --\x3e\n\n        \x3c!-- Servlet Begin --\x3e\n        <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>javax.servlet-api</artifactId>\n            <version>3.1.0</version>\n            <scope>provided</scope>\n        </dependency>\n        \x3c!-- Servlet End --\x3e\n\n        \x3c!-- Log Begin --\x3e\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>1.7.25</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n            <version>1.7.25</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>jcl-over-slf4j</artifactId>\n            <version>1.7.25</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>jul-to-slf4j</artifactId>\n            <version>1.7.25</version>\n        </dependency>\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <version>1.2.17</version>\n        </dependency>\n        \x3c!-- Log End --\x3e\n\n        \x3c!-- Commons Begin --\x3e\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n            <version>3.5</version>\n        </dependency>\n        \x3c!-- Commons End --\x3e\n    </dependencies>\n</project>\n')])])])])}),[],!1,null,null,null);e.default=o.exports}}]);