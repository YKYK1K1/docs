(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{857:function(e,n,r){"use strict";r.r(n);var s=r(67),a=Object(s.a)({},(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"第一个-spring-应用程序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第一个-spring-应用程序"}},[e._v("#")]),e._v(" "),r("strong",[e._v("第一个 Spring 应用程序")])]),e._v(" "),r("h2",{attrs:{id:"pom"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pom"}},[e._v("#")]),e._v(" "),r("strong",[e._v("POM")])]),e._v(" "),r("p",[e._v("创建一个工程名为 "),r("code",[e._v("hello-spring")]),e._v(" 的项目，"),r("code",[e._v("pom.xml")]),e._v(" 文件如下：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.yky</groupId>\n    <artifactId>hello-spring</artifactId>\n    <version>1.0.0-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-context</artifactId>\n            <version>4.3.17.RELEASE</version>\n        </dependency>\n    </dependencies>\n\n</project>\n')])])]),r("p",[e._v("主要增加了 "),r("code",[e._v("org.springframework:spring-context")]),e._v(" 依赖")]),e._v(" "),r("h2",{attrs:{id:"创建接口与实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建接口与实现"}},[e._v("#")]),e._v(" 创建接口与实现")]),e._v(" "),r("h3",{attrs:{id:"创建-userservice-接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建-userservice-接口"}},[e._v("#")]),e._v(" 创建 "),r("code",[e._v("UserService")]),e._v(" 接口")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("package com.yky.hello.spring.service;\n\npublic interface UserService {\n    public void sayHi();\n}\n")])])]),r("h3",{attrs:{id:"创建-userserviceimpl-实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建-userserviceimpl-实现"}},[e._v("#")]),e._v(" 创建 "),r("code",[e._v("UserServiceImpl")]),e._v(" 实现")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('package com.yky.hello.spring.service.impl;\n\nimport com.yky.hello.spring.service.UserService;\n\npublic class UserServiceImpl implements UserService {\n    public void sayHi() {\n        System.out.println("Hello Spring");\n    }\n}\n')])])]),r("h2",{attrs:{id:"创建spring配置文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建spring配置文件"}},[e._v("#")]),e._v(" 创建Spring配置文件")]),e._v(" "),r("p",[e._v("在"),r("code",[e._v("src/main/resources")]),e._v("目录下创建"),r("code",[e._v("spring-context.xml")]),e._v("配置文件，从现在开始类的实例化工作交给Spring容器管理(IOC),配置文件如下：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('<?xml version="1.0" encoding="UTF-8" ?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xsi:schemaLocation="\n       http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd">\n\n</beans>\n')])])]),r("ul",[r("li",[r("code",[e._v("<bean />")]),e._v(":用于定义一个实例对象。一个实例对象一个bean元素。")]),e._v(" "),r("li",[r("code",[e._v("id")]),e._v(":该属性是Bean实例的唯一标识，程序通过id属性访问Bean，Bean与Bean间的依赖关系也是通过id属性关联的。")]),e._v(" "),r("li",[r("code",[e._v("class")]),e._v(":指定该Bean所属的类，注意这里只能是类，不能是接口。")])]),e._v(" "),r("h2",{attrs:{id:"测试-spring-ioc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#测试-spring-ioc"}},[e._v("#")]),e._v(" 测试 Spring IoC")]),e._v(" "),r("p",[e._v("创建一个 "),r("code",[e._v("MyTest")]),e._v(" 测试类，测试对象是否能够通过 Spring 来创建，代码如下：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('package com.yky.hello.spring;\n\nimport com.yky.hello.spring.service.UserService;\nimport com.yky.hello.spring.service.impl.UserServiceImpl;\nimport javafx.application.Application;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\n/**\n * 依赖注入 控制反转\n */\npublic class MyTest {\n    public static void main(String[] args) {\n//        硬编码 耦合\n//        UserService userService = new UserServiceImpl();\n//        侵入式 spring读配置文件\n        ApplicationContext applicationContext = new ClassPathXmlApplicationContext("spring-context.xml");\n        UserService userService = (UserService) applicationContext.getBean("userService");\n        userService.sayHi();\n    }\n}\n\n')])])])])}),[],!1,null,null,null);n.default=a.exports}}]);