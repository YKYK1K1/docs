(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{770:function(t,e,r){"use strict";r.r(e);var n=r(67),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"springmvc-modelattribute"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-modelattribute"}},[t._v("#")]),t._v(" "),r("strong",[t._v("SpringMVC @ModelAttribute")])]),t._v(" "),r("h2",{attrs:{id:"简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" "),r("strong",[t._v("简介")])]),t._v(" "),r("p",[r("code",[t._v("@ModelAttribute")]),t._v(" 具有如下三个作用：")]),t._v(" "),r("ul",[r("li",[t._v("绑定请求参数到命令对象：放在功能处理方法的入参上时，用于将多个请求参数绑定到一个命令对象，从而简化绑定流程，而且自动暴露为模型数据用于视图页面展示时使用")]),t._v(" "),r("li",[t._v("暴露 "),r("code",[t._v("@RequestMapping")]),t._v(" 方法返回值为模型数据：放在功能处理方法的返回值上时，是暴露功能处理方法的返回值为模型数据，用于视图页面展示时使用")]),t._v(" "),r("li",[t._v("暴露表单引用对象为模型数据：放在处理器的一般方法（非功能处理方法）上时，是为表单准备要展示的表单引用对象，如注册时需要选择的所在城市等，而且在执行功能处理方法（"),r("code",[t._v("@RequestMapping")]),t._v(" 注解的方法）之前，自动添加到模型对象中，用于视图页面展示时使用")])]),t._v(" "),r("h2",{attrs:{id:"例子"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" "),r("strong",[t._v("例子")])]),t._v(" "),r("p",[t._v("暴露表单引用对象为模型数据的例子")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("@ModelAttribute\npublic User get(@RequestParam(required = false) String id) {\n    User entity = null;\n    if (StringUtils.isNotBlank(id)) {\n        entity = userService.get(id);\n    }\n    if (entity == null) {\n        entity = new User();\n    }\n    return entity;\n}\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);